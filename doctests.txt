This is a doctest file for the heartbeat.py module

>>> import heartpy as hp

#test data reader
>>> hp.get_data('data.csv')
array([530., 518., 506., ..., 492., 493., 494.])
>>> hp.get_data('data.mat', column_name='hr')
getting matlab file
array([530., 518., 506., ..., 492., 493., 494.])

#test samplerate calculation
>>> data = hp.get_data('data2.csv', column_name='timer')
>>> '%.10f' %hp.get_samplerate_mstimer(data)
'116.9955541689'

>>> datetimedata = ['2016-11-24 13:58:58.081000', '2016-11-24 13:58:58.097000', '2016-11-24 13:58:58.097000',
...                     '2016-11-24 13:58:58.112000', '2016-11-24 13:58:58.128000', '2016-11-24 13:58:58.128000',
...                     '2016-11-24 13:58:58.144000', '2016-11-24 13:58:58.144000', '2016-11-24 13:58:58.159000',
...                     '2016-11-24 13:58:58.175000', '2016-11-24 13:58:58.175000', '2016-11-24 13:58:58.190000',
...                     '2016-11-24 13:58:58.206000']
>>> hp.get_samplerate_datetime(datetimedata, timeformat='%Y-%m-%d %H:%M:%S.%f')
104.0

>>> datetimedata = hp.get_data('data3.csv', column_name='datetime')
>>> hp.get_samplerate_datetime(datetimedata, timeformat='%Y-%m-%d %H:%M:%S.%f')
100.41971086584796
>>>


#test rolling mean functions
>>> data = hp.get_data('data.csv')
>>> hp.rollwindow(data, 10).shape
(2474, 10)
  
>>> hp.rolmean(data, 10, 100.0).shape
(2483,)


#test filtering
>>> hp.filtersignal(data, 2, 100.0, 2).shape
(2483,)
		 

#test peak fitting
>>> data = hp.get_data('data.csv')
>>> rolmean = hp.rolmean(data, 0.75, 100.0)
>>> working_data = hp.fit_peaks(data, rolmean, 100.0)
>>> working_data['best']
20

#validate RR calculations
>>> working_data['RR_list'][0]
1020.0
>>> working_data['RR_list'][5]
1090.0
>>> working_data['RR_list'][10]
1080.0
>>> working_data['RR_diff'][0]
30.0
>>> working_data['RR_diff'][5]
100.0
>>> working_data['RR_diff'][10]
80.0
>>> working_data['RR_sqdiff'][0]
900.0
>>> working_data['RR_sqdiff'][5]
10000.0
>>> working_data['RR_sqdiff'][10]
6400.0


#validate pipeline
>>> data = hp.get_data('data.csv')
>>> working_data, measures = hp.process(data, 100.0, 0.75, calc_freq=True)

#validate timeseries measures
>>> '%.10f' %measures['bpm']
'58.8988476312'
>>> '%.10f' %measures['ibi']
'1018.6956521739'
>>> '%.10f' %measures['sdnn']
'65.7600610802'
>>> '%.10f' %measures['sdsd']
'34.8669252923'
>>> '%.10f' %measures['rmssd']
'64.7372311032'
>>> '%.10f' %measures['pnn20']
'0.8636363636'
>>> '%.10f' %measures['pnn50']
'0.4090909091'
>>> '%.10f' %measures['hr_mad']
'40.0000000000'

#validate frequency measures
>>> '%.5f' %measures['lf']
'81098.10189'
>>> '%.5f' %measures['hf']
'35733.41616'
>>> '%.5f' %measures['lf/hf']
'2.26953'